% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helpers.R
\name{mix_data_over_determinated}
\alias{mix_data_over_determinated}
\title{Creates overdeterminated mixed data based on the input data.}
\usage{
mix_data_over_determinated(data, dim_mixed, n_layers = 1, nonlinearity = "elu")
}
\arguments{
\item{data}{A matrix containing the original data.}

\item{dim_mixed}{The dimension of the mixed data.}

\item{n_layers}{The number of mixing layers.}

\item{nonlinearity}{The function for applying nonlinearity
between the mixing layers.}
}
\value{
A matrix containing the mixed data.
}
\description{
Creates overdeterminated mixed data based on the input data.
}
\details{
The method mixes the input data by applying mixing matrices and nonlinear
activation function based on the input parameters. Let \eqn{\omega_i} be
the activation function of \eqn{i}th layer and \eqn{\mathbf B_i} be the
normalized mixing matrix of \eqn{i}th layer.
Then, the mixing function \eqn{\mathbf f_L} is defined as
\deqn{
    \mathbf f_L(\mathbf z) = \begin{cases}
        \omega_L(\mathbf B_L \mathbf z),\quad L = 1, \\
        \omega_L(\mathbf B_L \mathbf f_{L-1}(\mathbf z)),
        \quad L \in \{2,3,\dots\}.
    \end{cases}
}
The function has a linear activation \eqn{\omega_L(x)=x} for the last layer,
which means that mixing function \eqn{\mathbf f_1} with one layer corresponds
to a linear mixing. If more than one layers are applied, the other layers
use the activation function given by the parameter \code{nonlinearity}.
The options for \code{nonlinearity} are:

\code{nonlinarity="elu"}:
\deqn{
\omega_i(x)=\begin{cases}
    x,\quad x \geq 0, \\
    \text{exp}(x) - 1,\quad x < 0,
\end{cases}
}

\code{nonlinarity="xtanh"}:
\deqn{
\omega_i(x)= \text{tanh}(x) + 0.1 * x
}

\code{nonlinarity="lrelu"}:
\deqn{
\omega_i(x)=\begin{cases}
    x,\quad x \geq 0, \\
    0.2 * x, x < 0.
\end{cases}
}
}
\examples{
data <- matrix(rnorm(300), ncol = 3)
mixed_data <- mix_data_over_determinated(data, 5, 3)
}
