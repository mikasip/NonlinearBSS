% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/iVAE_radial_spatio_temporal.R
\name{iVAE_radial_spatio_temporal}
\alias{iVAE_radial_spatio_temporal}
\title{Radial Basis Function Based Spatio Temporal Identifiable Variational Autoencoder}
\usage{
iVAE_radial_spatio_temporal(
  data,
  spatial_locations,
  time_points,
  latent_dim,
  elevation = NULL,
  test_inds = NULL,
  spatial_dim = 2,
  spatial_basis = c(2, 9),
  temporal_basis = c(9, 17, 37),
  elevation_basis = NULL,
  seasonal_period = NULL,
  spatial_kernel = "gaussian",
  epochs,
  batch_size,
  ...
)
}
\arguments{
\item{data}{A matrix with P columns and N rows containing the observed data.}

\item{spatial_locations}{A matrix containing spatial locations.}

\item{time_points}{A vector containing the time points.}

\item{latent_dim}{A latent dimension for iVAE.}

\item{elevation}{An optional elevation vector for the data.}

\item{test_inds}{An optional vector of the indices of the rows used as
test data.}

\item{spatial_dim}{The spatial dimension. Default is 2.}

\item{spatial_basis}{The spatial resolution levels to form the spatial
radial basis functions. Default is \code{c(2,9)}}

\item{temporal_basis}{The temporal resolution levels to form the temporal
radial basis functions. Default is \code{c(9, 17, 37)}}

\item{elevation_basis}{An optional vector of elevation resolution levels.
Must be given if \code{elevation} is provided for the data}

\item{seasonal_period}{An optional parameter giving the length of the
seasonal period.}

\item{spatial_kernel}{A kernel function to be used to form the spatial radial basis
functions. Either \code{"gaussian"} (default) or \code{"wendland"}.}

\item{epochs}{A number of epochs to train the model.}

\item{batch_size}{A batch size.}

\item{...}{
  Arguments passed on to \code{\link[=iVAE]{iVAE}}
  \describe{
    \item{\code{hidden_units}}{K-dimensional vector giving the number of
hidden units for K layers in encoder and K layers in decoder.}
    \item{\code{test_data}}{A matrix with P columns containing the test data.}
    \item{\code{test_data_aux}}{A matrix with D columns containing the auxiliary
data for test_data.}
    \item{\code{aux_hidden_units}}{K-dimensional vector giving the number of
hidden units for K layers in auxiliary function.}
    \item{\code{validation_split}}{Proportion of data used for validation}
    \item{\code{activation}}{Activation function for the hidden layers.}
    \item{\code{source_dist}}{Distribution for the latent source.
Either "gaussian" or "laplace".}
    \item{\code{error_dist}}{Distribution for the model error.
Either "gaussian" or "laplace".}
    \item{\code{error_dist_sigma}}{A standard deviation for error_dist.}
    \item{\code{optimizer}}{A keras optimizer for the tensorflow model.
A default is Adam optimizer with polynomial decay.}
    \item{\code{lr_start}}{A starting learning rate for the default optimizer.}
    \item{\code{lr_end}}{A ending learning rate for the default optimizer.}
    \item{\code{steps}}{A number of learning steps between lr_start and lr_end
for the default optimizer.}
    \item{\code{seed}}{Seed for the tensorflow model. Should be used instead of
set.seed(seed).}
    \item{\code{get_prior_means}}{A boolean defining if the means provided by
the auxiliary function are returned.}
    \item{\code{true_data}}{The true latent components. If provided, the mean
correlation coefficient is calculated for each epoch.}
  }}
}
\value{
An object of class iVAEradial_st, inherits from class iVAE.
Additionally, the object has the following properties:
\item{spatial_basis}{Same as the function input \code{spatial_basis}.}
\item{temporal_basis}{Same as the function input \code{temporal_basis}.}
\item{elevation_basis}{Same as the function input \code{elevation_basis}.}
\item{spatial_kernel}{Same as the function input \code{spatial_kernel}.}
\item{min_time_point}{Minimum time point.}
\item{max_time_point}{Maximum time point.}
\item{min_elevation}{Minimum elevation. \code{NULL}, if elevation is not
provided.}
\item{max_elevation}{Maximum elevation. \code{NULL}, if elevation is not
provided.}
\item{spatial_dim}{The spatial dimension.}
For more details, see \code{\link{iVAE}}.
}
\description{
Trains an identifiable variational autoencoder (iVAE) which uses
spatial and temporal radial basis functions as auxiliary data.
}
\details{
The method creates the auxiliary data as radial basis functions based on
the given input parameters.
The vectors \code{spatial_basis}, \code{temporal_basis} and
\code{elevation_basis} define the resolution levels
used to create the radial basis functions. If \code{seasonal_period}
is provided, the method uses the seasonal time index instead of the
absolute time index to form the temporal basis functions. Providing
\code{seasonal_perid} can be useful for e.g. forecasting purposes.

After the forming the radial basis functions, the method
calls the function \code{iVAE} using the created auxiliary variables.
}
\examples{
p <- 3
n_time <- 100
n_spat <- 50
coords_time <- cbind(
    rep(runif(n_spat), n_time),
    rep(runif(n_spat), n_time), rep(1:n_time, each = n_spat)
)
data_obj <- generate_nonstationary_spatio_temporal_data_by_segments(
    n_time,
    n_spat, p, 5, 10, coords_time
)
latent_data <- data_obj$data
# Generate artificial observed data by applying a nonlinear mixture
obs_data <- mix_data(latent_data, 2)
cor(obs_data, latent_data)

# For better peformance, increase the number of epochs.
resiVAE <- iVAE_radial_spatio_temporal(obs_data, coords_time[, 1:2],
    coords_time[, 3], p,
    epochs = 10, batch_size = 64
)
cormat <- cor(resiVAE$IC, latent_data)
cormat
absolute_mean_correlation(cormat)

}
\references{
\insertAllCited{}
}
\seealso{
\code{\link{iVAE}}
\code{\link{generate_nonstationary_spatio_temporal_data_by_segments}}
}
\author{
Mika SipilÃ¤
}
